name: Update DocSets
on:
  workflow_dispatch:
jobs:
  query-registry:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11.4'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - id: setup-matrix
      run: python check-package-versions.py -o $GITHUB_OUTPUT
  generate-docset:
    needs: query-registry
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.query-registry.outputs.matrix) }}
    outputs:
      matrix: ${{ needs.query-registry.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.4'
          cache: 'pip'
      - id: preprocess-args
        run: |
          extra_args=""
          if [ -n '${{ matrix.allow_js }}' ] && [ '${{ matrix.allow_js }}' == 'true' ]; then
            extra_args="$extra_args --allow_js"
          fi

          echo "extra_args=$extra_args" >> $GITHUB_OUTPUT
      - run: pip install -r requirements.txt
      - run: python generate-docset.py ${{ matrix.bundle_id }} ${{ matrix.bundle_name }} ${{ matrix.platform_family }} ${{ matrix.url }} --version=${{ matrix.version }} ${{ steps.preprocess-args.outputs.extra_args }}
      - id: conditional-icon
        run: |
          if [ -n '${{ matrix.icon.file }}' ]; then
            icon=${{ matrix.icon.file }}
          elif [ -n '${{ matrix.icon.url }}' ]; then
            wget "${{ matrix.icon.url }}"
            icon=$(basename "${{ matrix.icon.url }}")
          else
            icon="icons/Docset-variation.png"
          fi

          if [ -n $icon ]; then
            echo "icon=$icon" >> $GITHUB_OUTPUT
          fi
      - uses: FedericoCarboni/setup-ffmpeg@v2
        if: ${{ steps.conditional-icon.outputs.icon }}
      - run: |
          ffmpeg -i $icon -vf "scale=16:-1:flags=lanczos,format=rgba,pad=16:16:(ow-iw)/2:(oh-ih)/2:color=#00000000" ${{ matrix.bundle_name }}.docset/icon.png
          ffmpeg -i $icon -vf "scale=32:-1:flags=lanczos,format=rgba,pad=32:32:(ow-iw)/2:(oh-ih)/2:color=#00000000" ${{ matrix.bundle_name }}.docset/icon@2x.png
        if: ${{ steps.conditional-icon.outputs.icon }}
        env:
          icon: ${{ steps.conditional-icon.outputs.icon }}
      - name: Enclose DocSet into directory
        run: |
          mkdir artifact
          mv *.docset artifact/
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.bundle_name }}.docset
          path: artifact
  open-pr-in-dash-contrib:
    needs: generate-docset
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-docset.outputs.matrix) }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.bundle_name }}.docset
      - uses: actions/checkout@v3
        with:
          repository: mofeing/Dash-User-Contributions
          token: ${{ secrets.DASH_TOKEN }}
          path: Dash-User-Contributions
      - run: |
          tar --exclude='.DS_Store' -cvzf ${{ matrix.bundle_name }}.tgz ${{ matrix.bundle_name }}.docset
          branch="${{ matrix.bundle_id }}-${{ matrix.version }}-$(sha256sum ${{ matrix.bundle_name }}.tgz | head -c 10)"
          
          cd $GITHUB_WORKSPACE/Dash-User-Contributions

          # log as 'github-actions[bot]'
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # commit docset to new branch
          git checkout -b $branch origin/master

          mkdir -p docsets/${{ matrix.bundle_name }}/versions/${{ matrix.version }}
          cp $GITHUB_WORKSPACE/${{ matrix.bundle_name }}.tgz docsets/${{ matrix.bundle_name }}/versions/${{ matrix.version }}
          cd docsets/${{ matrix.bundle_name }}

          echo "# ${{ matrix.bundle_name }}"                                                                  >README.md
          echo                                                                                                >>README.md
          echo "This DocSet was automatically generated by https://github.com/mofeing/julia-package-docsets." >>README.md
          echo                                                                                                >>README.md
          echo "Contact @mofeing for any inquiries."                                                          >>README.md

          cp $GITHUB_WORKSPACE/${{ matrix.bundle_name }}.docset/icon* .

          if [ ! -f "docset.json" ]; then
            echo '{
                "name": "${{ matrix.bundle_name }}",
                "version": "${{ matrix.version }}",
                "archive": "${{ matrix.bundle_name }}.tgz",
                "author": {
                    "name": "Sergio Sánchez Ramírez",
                    "author": "https://github.com/mofeing"
                },
                "aliases": [
                    "julia"
                ],
                "specific_versions": [
                    {
                      "version": "${{ matrix.version }}",
                      "archive": "versions/${{ matrix.version }}/${{ matrix.bundle_name }}.tgz"
                    }
                ]
            }' >docset.json
          fi

          # push to fork
          cd ../../
          git add --all
          git commit -m "[Julia] ${{ matrix.bundle_name }} ${{ matrix.version }}"
          git push -u origin HEAD
